name: "Publish apax package"
description: "Publishes an apax package to a remote registry"
inputs:
  registries:
    description: "A newline-delimited string of registries the package is to be published to"
    required: true
  tag:
    description: "The tag to apply to the published package. Default is latest"
    required: false
    default: "latest"
  path:
    description: "The relative path to the apax package"
    required: false
    default: "."
runs:
  using: "composite"
  steps:
    - name: Pack source code
      shell: bash
      run: |
        # Change to the project directory
        cd ${{ inputs.path }}

        # base command
        CMD="apax publish"


        # Suche nach .apax.tgz Datei
        PACKAGE_FILES=$(find . -maxdepth 1 -name "*.apax.tgz")

        # Z채hle die gefundenen Dateien
        PACKAGE_COUNT=$(echo "$PACKAGE_FILES" | wc -l)

        if [ "$PACKAGE_COUNT" -eq 0 ]; then
          echo "Error: No .apax.tgz package found in the specified path."
          exit 1
        elif [ "$PACKAGE_COUNT" -gt 1 ]; then
          echo "Error: Multiple .apax.tgz packages found in the specified path. Please ensure there is only one package."
          exit 1
        fi

        PACKAGE_FILE=$(echo "$PACKAGE_FILES" | head -n 1)

        # Option f체r Paketnamen
        CMD="$CMD --package $PACKAGE_FILE"

        # Option f체r Tag
        if [ -n "${{ inputs.tag }}" ]; then
          CMD="$CMD --tag '${{ inputs.tag }}'"
        else
          CMD="$CMD --tag 'latest'"
        fi
        # process registries and execute the publish command per registry
        if [ -n "${{ inputs.registries }}" ]; then
          while IFS= read -r registry; do
            if [ ! -z "$registry" ]; then

              echo "Running command: $CMD --registry $registry"
              eval "$CMD --registry $registry"
            fi
          done <<< "${{ inputs.registries }}"
        else
          # Wenn keine registries angegeben sind, die Standardaktion durchf체hren
          echo "Publishing to default registry"
          eval "$CMD"
        fi
 