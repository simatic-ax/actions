name: APAX Login Validation Tests

on:
  workflow_call:
    secrets:
      APAX_TOKEN:
        required: true
      DEPLOY_TOKEN:
        required: true

jobs:
  test-apax-login:
    runs-on: ubuntu-24.04
    container:
      image: ghcr.io/simatic-ax/ci-images/apax-ci-image:3.4.2
    steps:
      - uses: actions/checkout@v3

      - name: Test Empty Token
        id: empty-token-test
        uses: ./apax-login
        continue-on-error: true
        with:
          apax-token: ""

      - name: Verify Empty Token Failure
        run: |
          if [ "${{ steps.empty-token-test.outcome }}" != "failure" ]; then
            echo "Test failed: An empty token should lead to an error"
            exit 1
          fi

      - name: Test Invalid URL
        id: invalid-url-test
        uses: ./apax-login
        continue-on-error: true
        with:
          apax-token: ${{ secrets.APAX_TOKEN }}
          registries: |
            invalid-url,token1

      - name: Verify Invalid URL Failure
        run: |
          if [ "${{ steps.invalid-url-test.outcome }}" != "failure" ]; then
            echo "Test failed: An invalid URL should lead to an error"
            exit 1
          fi

      - name: Test Missing Registry Token
        id: missing-token-test
        uses: ./apax-login
        continue-on-error: true
        with:
          apax-token: ${{ secrets.APAX_TOKEN }}
          registries: |
            https://valid-registry.com,

      - name: Verify Missing Registry Token Failure
        run: |
          if [ "${{ steps.missing-token-test.outcome }}" != "failure" ]; then
            echo "Test failed: A missing token in registry entries should lead to an error"
            exit 1
          fi

      - name: Test Valid Configuration
        id: valid-test
        uses: ./apax-login
        continue-on-error: true
        with:
          apax-token: ${{ secrets.APAX_TOKEN }}
          registries: |
            https://npm.pkg.github.com/,${{ secrets.DEPLOY_TOKEN }}

      - name: Verify Valid Configuration Success
        run: |
          if [ "${{ steps.valid-test.outcome }}" != "success" ]; then
            echo "Test failed: A valid configuration should lead to success"
            exit 1
          fi

      - name: Test URL Regex Validation
        id: url-regex-test
        uses: ./apax-login
        continue-on-error: true
        with:
          apax-token: ${{ secrets.APAX_TOKEN }}
          registries: |
            ftp://invalid-protocol.com,token1

      - name: Verify URL Regex Validation Failure
        run: |
          if [ "${{ steps.url-regex-test.outcome }}" != "failure" ]; then
            echo "Test failed: An invalid URL protocol should lead to an error"
            exit 1
          fi

      # Zusammenfassender Report
      - name: Test Summary
        if: always()
        run: |
          echo "Test Ergebnisse:"
          echo "Empty Token Test: ${{ steps.empty-token-test.outcome }}"
          echo "Invalid URL Test: ${{ steps.invalid-url-test.outcome }}"
          echo "Missing Token Test: ${{ steps.missing-token-test.outcome }}"
          echo "Invalid Format Test: ${{ steps.invalid-format-test.outcome }}"
          echo "Valid Configuration Test: ${{ steps.valid-test.outcome }}"
          echo "URL Regex Test: ${{ steps.url-regex-test.outcome }}"

          # Pr√ºfe, ob alle erwarteten Fehler aufgetreten sind
          FAILED_VALIDATIONS=0

          [[ "${{ steps.empty-token-test.outcome }}" != "failure" ]] && FAILED_VALIDATIONS=$((FAILED_VALIDATIONS+1))
          [[ "${{ steps.invalid-url-test.outcome }}" != "failure" ]] && FAILED_VALIDATIONS=$((FAILED_VALIDATIONS+1))
          [[ "${{ steps.missing-token-test.outcome }}" != "failure" ]] && FAILED_VALIDATIONS=$((FAILED_VALIDATIONS+1))
          [[ "${{ steps.invalid-format-test.outcome }}" != "failure" ]] && FAILED_VALIDATIONS=$((FAILED_VALIDATIONS+1))
          [[ "${{ steps.valid-test.outcome }}" != "success" ]] && FAILED_VALIDATIONS=$((FAILED_VALIDATIONS+1))
          [[ "${{ steps.url-regex-test.outcome }}" != "failure" ]] && FAILED_VALIDATIONS=$((FAILED_VALIDATIONS+1))

          if [ $FAILED_VALIDATIONS -gt 0 ]; then
            echo "::error::$FAILED_VALIDATIONS Validierungstests sind fehlgeschlagen!"
            exit 1
          fi