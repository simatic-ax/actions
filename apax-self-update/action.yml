name: "Update apax"
description: "Updates apax itself. Use this action with caution, as new major versions of apax aren't guaranteed to work with every CI image"
inputs:
  check:
    description: "Check whether an update is available, but do not install it."
    required: false
    default: "false"
  force-latest:
    description: "Force update to latest version. Be aware that could be a major version update which might includes breaking changes."
    required: false
    default: "false"
  version:
    description: "The version of apax to update to. If not specified, the latest version within the current  major version will be installed."
runs:
  using: "composite"
  steps:
    - name: Update apax
      shell: bash
      run: |        
        # Function to validate extended SemVer format
        validate_semver() {
          local version=$1
          # Regular expression for extended SemVer format
          local semver_regex="^(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)(-((rc|alpha|beta|dev|snapshot)[.-]?[0-9]*|[0-9a-f]{7,40}|([0-9a-zA-Z-]+(\.[0-9a-zA-Z-]+)*)))?(\+([0-9a-zA-Z-]+(\.[0-9a-zA-Z-]+)*))?$"

          if ! [[ $version =~ $semver_regex ]]; then
            echo "Error: Invalid version format '$version'"
            echo "Version must follow SemVer format with optional extensions:"
            echo "- Standard format: X.Y.Z"
            echo "- Release candidates: X.Y.Z-rc.N"
            echo "- Alpha/Beta: X.Y.Z-alpha.N or X.Y.Z-beta.N"
            echo "- Development: X.Y.Z-dev.N"
            echo "- Snapshots: X.Y.Z-snapshot.N"
            echo "- Commit hashes: X.Y.Z-commithash"
            echo "- Build metadata: X.Y.Z+build.123"
            exit 1
          fi
        }

        # base command
        CMD="apax self-update"

        # Add version if specified
        if [ ! -z "${{ inputs.version }}" ]; then
          # Validate version format
          validate_semver "${{ inputs.version }}"
          CMD="$CMD ${{ inputs.version }}"
        fi
        
        # Add check flag if true
        if [ "${{ inputs.check }}" == "true" ]; then
          CMD="$CMD --check"
        fi

        # Add force-latest flag if true
        if [ "${{ inputs.force-latest }}" == "true" ]; then
          CMD="$CMD --force-latest"
        fi

        echo "Running command: $CMD"
        eval $CMD