name: "Install apax dependencies"
description: "Installs the apax dependencies based on the projects apax.yaml file"
inputs:
  immutable:
    description: "Install all dependencies and devDependencies from the apax-lock.json or throw if not there or not in sync with your apax.yml"
    required: false
    default: "false"
  redownload:
    description: "Install all dependencies and devDependencies from your apax.yml but force a redownload of the packages to the global cache"
    required: false
    default: "false"
  copy-local:
    description: "Install all dependencies and devDependencies from your apax.yml and copy them into you project instead of linking to the global cache (be aware that this increase the memory needs of your project)"
    required: false
    default: "false"
  verbose:
    description: "Install all dependencies and devDependencies from your apax.yml, show additional output"
    required: false
    default: "false"
  catalog:
    description: "Installs dependencies according to catalog"
    required: false
    default: "false"
  strict:
    description: "Applies the exact package versions from the catalog"
    required: false
    default: "false"
  path:
    description: "The relative path to the project whose dependencies are to be installed"
    required: false
    default: "."
  # currently not supported
  #    installStrategy
  #    

runs:
  using: "composite"
  steps:
    - name: Install apax dependencies
      shell: bash
      run: |

        # Change to the project directory
        cd ${{ inputs.path }}
        
        # base command
        cmd="apax install"

        # Check the inputs and add the corresponding flags to the command
        if [[ "${{ inputs.immutable }}" == "true" ]]; then
          cmd+=" --immutable"
        fi

        if [[ "${{ inputs.redownload }}" == "true" ]]; then
          cmd+=" --redownload"
        fi

        if [[ "${{ inputs.copy-local }}" == "true" ]]; then
          cmd+=" --copy-local"
        fi

        if [[ "${{ inputs.verbose }}" == "true" ]]; then
          cmd+=" --verbose"
        fi

        if [[ "${{ inputs.catalog }}" != "false" ]]; then
          cmd+=" --catalog ${{ inputs.catalog }}"
          if [[ "${{ inputs.strict }}" == "true" ]]; then
            cmd+=" --strict"
          fi
        elif [[ "${{ inputs.strict }}" == "true" ]]; then
          echo "Error: The --strict flag can only be used with the --catalog flag."
          exit 1
        fi

        # perfom the install
        eval "$cmd"
  